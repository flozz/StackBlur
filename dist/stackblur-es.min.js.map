{"version":3,"file":"stackblur-es.min.js","sources":["../src/stackblur.js"],"sourcesContent":["/* eslint-disable no-bitwise, unicorn/prefer-query-selector */\n/**\n* StackBlur - a fast almost Gaussian Blur For Canvas\n*\n* In case you find this class useful - especially in commercial projects -\n* I am not totally unhappy for a small donation to my PayPal account\n* mario@quasimondo.de\n*\n* Or support me on flattr:\n* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.\n*\n* @module StackBlur\n* @author Mario Klingemann\n* Contact: mario@quasimondo.com\n* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}\n* Twitter: @quasimondo\n*\n* @copyright (c) 2010 Mario Klingemann\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* eslint-disable max-len */\nconst mulTable = [\n  512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512,\n  454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512,\n  482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456,\n  437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512,\n  497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328,\n  320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456,\n  446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335,\n  329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512,\n  505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405,\n  399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328,\n  324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271,\n  268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456,\n  451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388,\n  385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335,\n  332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292,\n  289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259\n];\n\nconst shgTable = [\n  9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17,\n  17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19,\n  19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\n  20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\n  21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n  21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,\n  22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n  22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23,\n  23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n  23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n  23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n  23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n  24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24\n];\n/* eslint-enable max-len */\n\n/**\n * @param {string|HTMLImageElement} img\n * @param {string|HTMLCanvasElement} canvas\n * @param {Float} radius\n * @param {boolean} blurAlphaChannel\n * @param {boolean} useOffsetWidth\n * @returns {undefined}\n */\nfunction processImage (img, canvas, radius, blurAlphaChannel, useOffsetWidth) {\n  if (typeof img === 'string') {\n    img = document.getElementById(img);\n  }\n  if (!img || !('naturalWidth' in img)) {\n    return;\n  }\n\n  const dimensionType = useOffsetWidth ? 'offset' : 'natural';\n  const w = img[dimensionType + 'Width'];\n  const h = img[dimensionType + 'Height'];\n\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n  if (!canvas || !('getContext' in canvas)) {\n    return;\n  }\n\n  canvas.style.width = w + 'px';\n  canvas.style.height = h + 'px';\n  canvas.width = w;\n  canvas.height = h;\n\n  const context = canvas.getContext('2d');\n  context.clearRect(0, 0, w, h);\n  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);\n\n  if (isNaN(radius) || radius < 1) { return; }\n\n  if (blurAlphaChannel) {\n    processCanvasRGBA(canvas, 0, 0, w, h, radius);\n  } else {\n    processCanvasRGB(canvas, 0, 0, w, h, radius);\n  }\n}\n\n/**\n * @param {string|HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @throws {Error|TypeError}\n * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}\n */\nfunction getImageDataFromCanvas (canvas, topX, topY, width, height) {\n  if (typeof canvas === 'string') {\n    canvas = document.getElementById(canvas);\n  }\n  if (!canvas || typeof canvas !== 'object' || !('getContext' in canvas)) {\n    throw new TypeError(\n      'Expecting canvas with `getContext` method ' +\n            'in processCanvasRGB(A) calls!'\n    );\n  }\n\n  const context = canvas.getContext('2d');\n\n  try {\n    return context.getImageData(topX, topY, width, height);\n  } catch (e) {\n    throw new Error('unable to access image data: ' + e);\n  }\n}\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\nfunction processCanvasRGBA (canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) { return; }\n  radius |= 0;\n\n  let imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n\n  imageData = processImageDataRGBA(\n    imageData, topX, topY, width, height, radius\n  );\n\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\nfunction processImageDataRGBA (imageData, topX, topY, width, height, radius) {\n  const pixels = imageData.data;\n\n  let x, y, i, p, yp, yi, yw, rSum, gSum, bSum, aSum,\n    rOutSum, gOutSum, bOutSum, aOutSum,\n    rInSum, gInSum, bInSum, aInSum,\n    pr, pg, pb, pa, rbs;\n\n  const div = 2 * radius + 1;\n  // const w4 = width << 2;\n  const widthMinus1 = width - 1;\n  const heightMinus1 = height - 1;\n  const radiusPlus1 = radius + 1;\n  const sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n\n  const stackStart = new BlurStack();\n  let stack = stackStart;\n  let stackEnd;\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n  stack.next = stackStart;\n  let stackIn = null;\n  let stackOut = null;\n\n  yw = yi = 0;\n\n  const mulSum = mulTable[radius];\n  const shgSum = shgTable[radius];\n\n  for (y = 0; y < height; y++) {\n    rInSum = gInSum = bInSum = aInSum = rSum = gSum = bSum = aSum = 0;\n\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    aOutSum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    aSum += sumFactor * pa;\n\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      rSum += (stack.r = (pr = pixels[p])) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = (pg = pixels[p + 1])) * rbs;\n      bSum += (stack.b = (pb = pixels[p + 2])) * rbs;\n      aSum += (stack.a = (pa = pixels[p + 3])) * rbs;\n\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      aInSum += pa;\n\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (x = 0; x < width; x++) {\n      pixels[yi + 3] = pa = (aSum * mulSum) >> shgSum;\n      if (pa !== 0) {\n        pa = 255 / pa;\n        pixels[yi] = ((rSum * mulSum) >> shgSum) * pa;\n        pixels[yi + 1] = ((gSum * mulSum) >> shgSum) * pa;\n        pixels[yi + 2] = ((bSum * mulSum) >> shgSum) * pa;\n      } else {\n        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      p = (yw + ((p = x + radius + 1) < widthMinus1\n        ? p\n        : widthMinus1)) << 2;\n\n      rInSum += (stackIn.r = pixels[p]);\n      gInSum += (stackIn.g = pixels[p + 1]);\n      bInSum += (stackIn.b = pixels[p + 2]);\n      aInSum += (stackIn.a = pixels[p + 3]);\n\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n      aSum += aInSum;\n\n      stackIn = stackIn.next;\n\n      rOutSum += (pr = stackOut.r);\n      gOutSum += (pg = stackOut.g);\n      bOutSum += (pb = stackOut.b);\n      aOutSum += (pa = stackOut.a);\n\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      aInSum -= pa;\n\n      stackOut = stackOut.next;\n\n      yi += 4;\n    }\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    gInSum = bInSum = aInSum = rInSum = gSum = bSum = aSum = rSum = 0;\n\n    yi = x << 2;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n    aOutSum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n    aSum += sumFactor * pa;\n\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack.a = pa;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = (yp + x) << 2;\n\n      rSum += (stack.r = (pr = pixels[yi])) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = (pg = pixels[yi + 1])) * rbs;\n      bSum += (stack.b = (pb = pixels[yi + 2])) * rbs;\n      aSum += (stack.a = (pa = pixels[yi + 3])) * rbs;\n\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n      aInSum += pa;\n\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p + 3] = pa = (aSum * mulSum) >> shgSum;\n      if (pa > 0) {\n        pa = 255 / pa;\n        pixels[p] = ((rSum * mulSum) >> shgSum) * pa;\n        pixels[p + 1] = ((gSum * mulSum) >> shgSum) * pa;\n        pixels[p + 2] = ((bSum * mulSum) >> shgSum) * pa;\n      } else {\n        pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n      }\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n      aSum -= aOutSum;\n\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n      aOutSum -= stackIn.a;\n\n      p = (x + (\n        ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *\n                width\n      )) << 2;\n\n      rSum += (rInSum += (stackIn.r = pixels[p]));\n      gSum += (gInSum += (stackIn.g = pixels[p + 1]));\n      bSum += (bInSum += (stackIn.b = pixels[p + 2]));\n      aSum += (aInSum += (stackIn.a = pixels[p + 3]));\n\n      stackIn = stackIn.next;\n\n      rOutSum += (pr = stackOut.r);\n      gOutSum += (pg = stackOut.g);\n      bOutSum += (pb = stackOut.b);\n      aOutSum += (pa = stackOut.a);\n\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n      aInSum -= pa;\n\n      stackOut = stackOut.next;\n\n      yi += width;\n    }\n  }\n  return imageData;\n}\n\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {undefined}\n */\nfunction processCanvasRGB (canvas, topX, topY, width, height, radius) {\n  if (isNaN(radius) || radius < 1) { return; }\n  radius |= 0;\n\n  let imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);\n  imageData = processImageDataRGB(\n    imageData, topX, topY, width, height, radius\n  );\n\n  canvas.getContext('2d').putImageData(imageData, topX, topY);\n}\n\n/**\n * @param {ImageData} imageData\n * @param {Integer} topX\n * @param {Integer} topY\n * @param {Integer} width\n * @param {Integer} height\n * @param {Float} radius\n * @returns {ImageData}\n */\nfunction processImageDataRGB (imageData, topX, topY, width, height, radius) {\n  const pixels = imageData.data;\n\n  let x, y, i, p, yp, yi, yw, rSum, gSum, bSum,\n    rOutSum, gOutSum, bOutSum,\n    rInSum, gInSum, bInSum,\n    pr, pg, pb, rbs;\n\n  const div = 2 * radius + 1;\n  // const w4 = width << 2;\n  const widthMinus1 = width - 1;\n  const heightMinus1 = height - 1;\n  const radiusPlus1 = radius + 1;\n  const sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;\n\n  const stackStart = new BlurStack();\n  let stack = stackStart;\n  let stackEnd;\n  for (i = 1; i < div; i++) {\n    stack = stack.next = new BlurStack();\n    if (i === radiusPlus1) {\n      stackEnd = stack;\n    }\n  }\n  stack.next = stackStart;\n  let stackIn = null;\n  let stackOut = null;\n\n  yw = yi = 0;\n\n  const mulSum = mulTable[radius];\n  const shgSum = shgTable[radius];\n\n  for (y = 0; y < height; y++) {\n    rInSum = gInSum = bInSum = rSum = gSum = bSum = 0;\n\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    for (i = 1; i < radiusPlus1; i++) {\n      p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n      rSum += (stack.r = (pr = pixels[p])) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = (pg = pixels[p + 1])) * rbs;\n      bSum += (stack.b = (pb = pixels[p + 2])) * rbs;\n\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n\n      stack = stack.next;\n    }\n\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (x = 0; x < width; x++) {\n      pixels[yi] = (rSum * mulSum) >> shgSum;\n      pixels[yi + 1] = (gSum * mulSum) >> shgSum;\n      pixels[yi + 2] = (bSum * mulSum) >> shgSum;\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n\n      p = (yw + (\n        (p = x + radius + 1) < widthMinus1 ? p : widthMinus1\n      )) << 2;\n\n      rInSum += (stackIn.r = pixels[p]);\n      gInSum += (stackIn.g = pixels[p + 1]);\n      bInSum += (stackIn.b = pixels[p + 2]);\n\n      rSum += rInSum;\n      gSum += gInSum;\n      bSum += bInSum;\n\n      stackIn = stackIn.next;\n\n      rOutSum += (pr = stackOut.r);\n      gOutSum += (pg = stackOut.g);\n      bOutSum += (pb = stackOut.b);\n\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n\n      stackOut = stackOut.next;\n\n      yi += 4;\n    }\n    yw += width;\n  }\n\n  for (x = 0; x < width; x++) {\n    gInSum = bInSum = rInSum = gSum = bSum = rSum = 0;\n\n    yi = x << 2;\n    rOutSum = radiusPlus1 * (pr = pixels[yi]);\n    gOutSum = radiusPlus1 * (pg = pixels[yi + 1]);\n    bOutSum = radiusPlus1 * (pb = pixels[yi + 2]);\n\n    rSum += sumFactor * pr;\n    gSum += sumFactor * pg;\n    bSum += sumFactor * pb;\n\n    stack = stackStart;\n\n    for (i = 0; i < radiusPlus1; i++) {\n      stack.r = pr;\n      stack.g = pg;\n      stack.b = pb;\n      stack = stack.next;\n    }\n\n    yp = width;\n\n    for (i = 1; i <= radius; i++) {\n      yi = (yp + x) << 2;\n\n      rSum += (stack.r = (pr = pixels[yi])) * (rbs = radiusPlus1 - i);\n      gSum += (stack.g = (pg = pixels[yi + 1])) * rbs;\n      bSum += (stack.b = (pb = pixels[yi + 2])) * rbs;\n\n      rInSum += pr;\n      gInSum += pg;\n      bInSum += pb;\n\n      stack = stack.next;\n\n      if (i < heightMinus1) {\n        yp += width;\n      }\n    }\n\n    yi = x;\n    stackIn = stackStart;\n    stackOut = stackEnd;\n    for (y = 0; y < height; y++) {\n      p = yi << 2;\n      pixels[p] = (rSum * mulSum) >> shgSum;\n      pixels[p + 1] = (gSum * mulSum) >> shgSum;\n      pixels[p + 2] = (bSum * mulSum) >> shgSum;\n\n      rSum -= rOutSum;\n      gSum -= gOutSum;\n      bSum -= bOutSum;\n\n      rOutSum -= stackIn.r;\n      gOutSum -= stackIn.g;\n      bOutSum -= stackIn.b;\n\n      p = (x + (\n        ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *\n                width\n      )) << 2;\n\n      rSum += (rInSum += (stackIn.r = pixels[p]));\n      gSum += (gInSum += (stackIn.g = pixels[p + 1]));\n      bSum += (bInSum += (stackIn.b = pixels[p + 2]));\n\n      stackIn = stackIn.next;\n\n      rOutSum += (pr = stackOut.r);\n      gOutSum += (pg = stackOut.g);\n      bOutSum += (pb = stackOut.b);\n\n      rInSum -= pr;\n      gInSum -= pg;\n      bInSum -= pb;\n\n      stackOut = stackOut.next;\n\n      yi += width;\n    }\n  }\n\n  return imageData;\n}\n\n/**\n *\n */\nexport class BlurStack {\n  /**\n   * Set properties.\n   */\n  constructor () {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n  }\n}\n\nexport {\n  /**\n    * @function module:StackBlur.image\n    * @see module:StackBlur~processImage\n    */\n  processImage as image,\n  /**\n    * @function module:StackBlur.canvasRGBA\n    * @see module:StackBlur~processCanvasRGBA\n    */\n  processCanvasRGBA as canvasRGBA,\n  /**\n    * @function module:StackBlur.canvasRGB\n    * @see module:StackBlur~processCanvasRGB\n    */\n  processCanvasRGB as canvasRGB,\n  /**\n    * @function module:StackBlur.imageDataRGBA\n    * @see module:StackBlur~processImageDataRGBA\n    */\n  processImageDataRGBA as imageDataRGBA,\n  /**\n    * @function module:StackBlur.imageDataRGB\n    * @see module:StackBlur~processImageDataRGB\n    */\n  processImageDataRGB as imageDataRGB\n};\n"],"names":["mulTable","shgTable","processImage","img","canvas","radius","blurAlphaChannel","useOffsetWidth","document","getElementById","dimensionType","w","h","style","width","height","context","getContext","clearRect","drawImage","naturalWidth","naturalHeight","isNaN","processCanvasRGBA","processCanvasRGB","getImageDataFromCanvas","topX","topY","_typeof","TypeError","getImageData","e","Error","imageData","processImageDataRGBA","putImageData","x","y","i","p","yp","yi","yw","rSum","gSum","bSum","aSum","rOutSum","gOutSum","bOutSum","aOutSum","rInSum","gInSum","bInSum","aInSum","pr","pg","pb","pa","rbs","stackEnd","pixels","data","div","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","BlurStack","stack","next","stackIn","stackOut","mulSum","shgSum","r","g","b","a","processImageDataRGB"],"mappings":"qOA0CA,IAAMA,EAAW,CACf,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAA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"}